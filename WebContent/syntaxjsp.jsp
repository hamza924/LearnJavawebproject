<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Java Syntax</title>
<link rel="stylesheet"
      href="./css/style.css"
      type="text/css"/>
      
      <script src="https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.js"></script>
<script type="text/javascript">
 $(document).ready(function() {
			var form = $('#form1');
			
			form.submit(function (e) {
			 e.preventDefault();
			$.ajax({
			type: form.attr('method'),
			url: form.attr('action'),
			data: form.serialize(),
			success: function (data) {
			var result=data;
			$('#result1').text(result);
			alert(result);
			}
			});
			 
			return false;
			});
			
			var form1 = $('#form2');
			
			form1.submit(function (e) {
			 e.preventDefault();
			$.ajax({
			type: form1.attr('method'),
			url: form1.attr('action'),
			data: form1.serialize(),
			success: function (data) {
			var result=data;
			$('#result2').text(result);
			alert(result);
			}
			});
			 
			return false;
			});
			
			var form2 = $('#form3');
			form2.submit(function (e) {
			 e.preventDefault();
			$.ajax({
			type: form2.attr('method'),
			url: form2.attr('action'),
			data: form2.serialize(),
			success: function (data) {
			var result=data;
			//$('.result').text(result);
			alert(result);
			}
			});
			 
			return false;
			});
			
			var form3 = $('#form4');
			form3.submit(function (e) {
			 e.preventDefault();
			$.ajax({
			type: form3.attr('method'),
			url: form3.attr('action'),
			data: form3.serialize(),
			success: function (data) {
			var result=data;
			//$('.result').text(result);
			alert(result);
			}
			});
			 
			return false;
			});
			
			var form4 = $('#form5');
			form4.submit(function (e) {
			 e.preventDefault();
			$.ajax({
			type: form4.attr('method'),
			url: form4.attr('action'),
			data: form4.serialize(),
			success: function (data) {
			var result=data;
			$('.result').text(result);
			alert(result);
			}
			});
			 
			return false;
			});
			
			var form6 = $('#form6');
			form6.submit(function (e) {
			 e.preventDefault();
			$.ajax({
			type: form6.attr('method'),
			url: form6.attr('action'),
			data: form6.serialize(),
			success: function (data) {
			var result=data;
			//$('.result').text(result);
			alert(result);
			}
			});
			 
			return false;
			});
			
			var form7 = $('#form7');
			form7.submit(function (e) {
			 e.preventDefault();
			$.ajax({
			type: form7.attr('method'),
			url: form7.attr('action'),
			data: form7.serialize(),
			success: function (data) {
			var result=data;
			//$('.result').text(result);
			alert(result);
			}
			});
			 
			return false;
			});
			
			
			
			
			
 });
			</script>
</head>
<body>
<% 
if(session.getAttribute("uname")!=null){
	
	
%>	
<h1 class = "heading">Learn Java!!</h1>
<div class ="outernav">
							<div class = "innernav">
							
							<a href = "gettingstarted.jsp">Getting Started</a>
							<a href = "syntaxjsp.jsp">Java Syntax</a>
							<a href = "loops.jsp">Java Loops</a>
							<a href = "variables.jsp">Variables</a>
							<a href = "operators.jsp">Operators</a>
							<a href = "stmt.jsp">If statements</a>
							<a href = "object.jsp">OOP</a>
							<a href = "arrays.jsp">Arrays</a>
							<a href = "method.jsp">Method With Parameters</a>
							</div>
						</div>
	<div class = "outerheading">
	<div class = "innerheading">
	<h2 class = "heading2">Java Syntax</h2>
	</div>
	</div>
	
	<div class="outerbody">
	<div class="innerbody">
	<p> The basic syntax of Java revolves around a class having a main method, and within
		this class is where the code will be executed. The most well known 
		example that illustrates this is the common HelloWorld example. 
		
	 </p>
	 
	 <p> Within our HelloWorld Java project that has been created within Eclipse.Inside the src folder
	 	 right click and go to new -> Class. The following console should appear, once this appears click on the public
	 	 static void main check box. 
	  </p>
	  
	  <img alt="class" src="images/pic5.png" width = "500" class = "Centerimg">
	  
	  <p>Once we have done this Eclipse will auto generate some code that includes our main method.
	  </p>
	  
	  <img alt="code" src="images/pic6.png" width = "500" class = "Centerimg">
	  
	  
	  <h3 class = "heading3">Hello Class code Explained</h3>
	  <p> In Java for our code to run, there needs to be a class where all the code is 
	  	  written. In the example above the code is all written well, auto generated by Eclipse
	  	  inside the class called HelloClass. Within this class there is the main method that 
	  	  will run the code. Currently the method is empty. To print a simple hello world some code will be added to the main method.
	  </p>
	  <p><strong>Input</strong></p>
	  
	  <img alt="inputcode" src="images/pic7.png" width="400" class = "Centerimg">
	 <p> <strong>Output</strong></p>
	  <img alt="output code" src="images/pic8.png" class = "Centerimg">
	  
	  <h3 class = "heading3">Syntax Explained</h3>
	  <p><b>The Main Method.</b>Any code that is in the main method block will be executed. In the example the code inside the 
	  	main method is the <b>System.out.println method</b>. This method is used to print a line of text to the screen.
	  	</p>
	  	
	  	<h3 class = "heading 3">Things to consider:</h3>
	<p> Every line of code within Java ends in <b>;</b></p>
	<p> A code block is defined using these <b>{}</b></p>
	
	
		<div class = "oborder">
		<div class = "border">
		
		<p> <strong>Fill in the blanks</strong></p>
		
		<form action="./syntax" method = "post" id = "form1">
		
		<p><strong>System.out.println("Hello World")<input type = "text" name = ";" class = "textboxsymbol"></strong></p>
		
		
		<input type = "submit" value = "check">
		
		</form>
		
		<div id = "result1"></div>
		
		
		
		
		
		</div>
		
		
		
		
		</div>
		
		<br>
		<br>
		
		<div class = "oborder">
		
		<div class = "border">
		
		
		<p><strong>Fill in the blanks</strong></p>
		
		<form action="./syntax" method = "post" id = "form2">
		
		<strong>public static void main(String[] args)<input type = "text" name = "{" class = "textboxsymbol"></strong>
		<br>
		<strong>System.out.println("Hello <%=session.getAttribute("uname") %>");</strong>
		<br>
		<input type = "text" name = "}" class = "textboxsymbol">
		
		
		
		
		<input type = "submit" value = "Check">
		</form>
		
		<div id = "result2"></div>
		
		
		
		</div>
		
		
		
		
		
		</div>
	
			
	</div>
	</div>
	
	<div>
	
	
	
	</div>



<a href ="logout.jsp"> logout</a>
	
	<%
}

else


{
	
	response.sendRedirect("index.html");
	
}






%>

<div class="footer">
  <p>Developed by Hamza Iqbal </p>
</div>
</body>
</html>